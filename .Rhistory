library(shiny)
library(shinyjs)
library(highcharter)
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
s <- 16*( 2 + 1) * ((( 0.015*(1- 0.015)))^0.5) / (0.015* 0.1 )  )^2
s <- 16*( 2 + 1) * (((( 0.015*(1- 0.015)))^0.5) / (0.015* 0.1 ))^2
s
s <- 16*( 2 + 1) * (((( 1.5*(1- 1.5)))^0.5) / (1.5* 0.1 ))^2
s <- 16*( 2 + 1) * (((( 0.015*(1- 0.015)))^0.5) / (0.015* 0.4 ))^2
s <- 16*( 2 + 1) * (((( 0.015*(1- 0.015)))^0.5) / (0.015* 0.2))^2
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
shiny::runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
library(highcharter)
shiny::runApp('~/code_repo/ABtester_sampletester')
highchart()%>%
hc_add_series(data = c(1.2), name = "baseline")
hc_add_series(data = c(1.2), name = "baseline", type = 'column')
highchart()%>%hc_add_series(data = c(1.2), name = "baseline", type = 'column')
highchart()%>%hc_add_series(data = c(1.2), name = "baseline", type = 'column', inverted = T)
highchart()%>%hc_add_series(data = c(1.2), name = "baseline", type = 'bar', inverted = T)
highchart()%>%hc_add_series(data = c(1.2), name = "baseline", type = 'bar')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
shiny::runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
install.packages('diagram')
library(diagram)
install.packages('diagrammeR')
install.packages('DiagrammeR')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
runApp('~/code_repo/ABtester_sampletester')
library(DiagrammeR)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a
node [fillcolor = green]
b c d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = neato]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a
node [fillcolor = green]
b c d
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e f g h i j}
c -> {k l m n o p}
d -> {q r s t u v}
}")
mermaid(
graph LR
A-->B
A-->C
A-->D
B-->E
C-->F
C-->G
C-->H
D-->I
D-->J
D-->K
)
mermaid(
" graph LR
A-->B
A-->C
A-->D
B-->E
C-->F
C-->G
C-->H
D-->I
D-->J
D-->K
")
mermaid(
" graph TB
A-->B
A-->C
A-->D
B-->E
C-->F
C-->G
C-->H
D-->I
D-->J
D-->K
")
mermaid(
" graph TB
A[Population]-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
B-->E
C-->F
C-->G
C-->H
D-->I
D-->J
D-->K
")
mermaid(
" graph TB
A(Population)-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
B-->E
C-->F
C-->G
C-->H
D-->I
D-->J
D-->K
")
shiny::runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
shiny::runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
mermaid(
" graph TB
A(Population)-->B[Control]
A-->C[Subject line 1]
A-->D[Subject line 2]
C-->E[Creative 1]
C-->F[Creative 2]
D-->G[Creative 1]
D-->H[Creative 2]
")
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
runApp('~/code_repo/design_experiment')
mermaid(
" graph TB
A(Population)-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
C-->E[Creative 1]
C-->F[Creative 2]
C-->I[Control]
D-->G[Creative 1]
D-->H[Creative 2]
D-->J[Control]")
mermaid(
" graph TB
A(Population)-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
C-->E[Creative 1]
C-->F[Creative 2]
C-->I[Control]
D-->G[Creative 1]
D-->H[Creative 2]
D-->J[Control]
B-->K[Control]")
mermaid(
" graph TB
A(Population)-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
C-->E[Creative 1]
C-->F[Creative 2]
C-->I[Control]
D-->G[Creative 1]
D-->H[Creative 2]
D-->J[Control]
B-->K[Control]
E-->L[Copy 1]
E-->M[Copy 2]
E-->N[Control]
C-->O[Copy 1]
C-->P[Copy 2]
C-->Q[Control]")
mermaid(
" graph TB
A(Population)-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
C-->E[Creative 1]
C-->F[Creative 2]
C-->I[Control]
D-->G[Creative 1]
D-->H[Creative 2]
D-->J[Control]
B-->K[Control]
E-->L[Copy 1]
E-->M[Copy 2]
E-->N[Control]
F-->O[Copy 1]
F-->P[Copy 2]
F-->Q[Control]")
mermaid(
" graph LR
A(Population)-->B[Control]
A-->C[Subject Line 1]
A-->D[Subject Line 2]
C-->E[Creative 1]
C-->F[Creative 2]
C-->I[Control]
D-->G[Creative 1]
D-->H[Creative 2]
D-->J[Control]
B-->K[Control]
E-->L[Copy 1]
E-->M[Copy 2]
E-->N[Control]
F-->O[Copy 1]
F-->P[Copy 2]
F-->Q[Control]")
runApp('~/code_repo/design_experiment')
